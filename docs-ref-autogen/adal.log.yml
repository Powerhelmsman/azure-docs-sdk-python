### YamlMime:UniversalReference
api_name: []
items:
- children:
  - adal.log.Logger
  - adal.log.create_log_context
  - adal.log.get_logging_options
  - adal.log.scrub_pii
  - adal.log.set_logging_options
  fullName: adal.log
  langs:
  - python
  module: adal.log
  name: log
  source:
    id: log
    path: adal\log.py
    remote:
      branch: master
      path: adal\log.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 0
  type: module
  uid: adal.log
- fullName: adal.log.create_log_context
  langs:
  - python
  module: adal.log
  name: create_log_context
  source:
    id: create_log_context
    path: adal\log.py
    remote:
      branch: master
      path: adal\log.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 34
  syntax:
    content: create_log_context(correlation_id=None, enable_pii=False)
    parameters:
    - defaultValue: None
      id: correlation_id
    - defaultValue: 'False'
      id: enable_pii
  type: function
  uid: adal.log.create_log_context
- fullName: adal.log.get_logging_options
  langs:
  - python
  module: adal.log
  name: get_logging_options
  source:
    id: get_logging_options
    path: adal\log.py
    remote:
      branch: master
      path: adal\log.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 60
  summary: 'Get logging options

    '
  syntax:
    content: get_logging_options()
    return:
      description: 'a dict, with a key of ''level'' for logging level.

        '
  type: function
  uid: adal.log.get_logging_options
- fullName: adal.log.scrub_pii
  langs:
  - python
  module: adal.log
  name: scrub_pii
  source:
    id: scrub_pii
    path: adal\log.py
    remote:
      branch: master
      path: adal\log.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 130
  summary: 'The input is a dict with semantic keys,

    and the output will be a dict with PII values replaced by padding.

    '
  syntax:
    content: scrub_pii(arg_dict, padding='...')
    parameters:
    - id: arg_dict
    - defaultValue: '...'
      id: padding
  type: function
  uid: adal.log.scrub_pii
- fullName: adal.log.set_logging_options
  langs:
  - python
  module: adal.log
  name: set_logging_options
  source:
    id: set_logging_options
    path: adal\log.py
    remote:
      branch: master
      path: adal\log.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 39
  summary: "Configure adal logger, including level and handler spec'd by python\n\
    logging module.\n\nBasic Usages::\n   >>>adal.set_logging_options({\n   >>>  'level':\
    \ 'DEBUG'\n   >>>  'handler': logging.FileHandler('adal.log')\n   >>>})\n"
  syntax:
    content: set_logging_options(options=None)
    parameters:
    - defaultValue: None
      id: options
  type: function
  uid: adal.log.set_logging_options
references:
- fullName: adal.log.Logger
  isExternal: false
  name: Logger
  parent: adal.log
  uid: adal.log.Logger
- fullName: adal.log.create_log_context
  isExternal: false
  name: create_log_context
  parent: adal.log
  uid: adal.log.create_log_context
- fullName: adal.log.get_logging_options
  isExternal: false
  name: get_logging_options
  parent: adal.log
  uid: adal.log.get_logging_options
- fullName: adal.log.scrub_pii
  isExternal: false
  name: scrub_pii
  parent: adal.log
  uid: adal.log.scrub_pii
- fullName: adal.log.set_logging_options
  isExternal: false
  name: set_logging_options
  parent: adal.log
  uid: adal.log.set_logging_options
